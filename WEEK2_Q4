Code : My approach
class Solution {
public:
    int compress(vector<char>& chars) {
    int n = sizeof(chars)/sizeof(chars[0]);
    if(n==1) return 1;
    int a = 0;
    int b = 1;
    while(b<n && a<n){
        int m = 1;
        while(b<n){
        if(chars[a] == chars[b]){
            b++;
            m++;
        }
        }
        if(m!=1){
        chars[a+1] = m;
        }
        a = b;
        b = a+1;
    }
    return sizeof(chars)/sizeof(chars[0]);  
    }
};

Code: Learned from internet
class Solution {
public:
    int compress(vector<char>& chars) {
    string s = "";
    for(int i = 0;i< chars.size();){
         char curr = chars[i];
         int count = 1;
         while(i+1< chars.size() && curr == chars[i+1]){
                i++;
                count++;
         }
         s += curr;
         if(count!=1){
            s += to_string(count);
         }
         i++;
         
    }
   
    for(int i=0;i<s.size();i++){
        chars[i] = s[i];
    }
    return s.size();
    }
   
};
